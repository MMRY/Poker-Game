// Generated by CoffeeScript 1.6.3
(function() {
  var EventEmitter, Seat,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  exports.Seat = Seat = (function(_super) {
    __extends(Seat, _super);

    function Seat(opts) {
      this.opts = opts;
      this.opts || (this.opts = {});
      if (this.opts.debug) {
        this.debug = true;
      }
    }

    Seat.prototype.update = function(game, callback) {
      return setImmediate(function() {
        return callback("Error, your should write something here");
      });
    };

    return Seat;

  })(EventEmitter);

  exports.create = function(id, opts, callback) {
    var bot;
    if (arguments.length === 2) {
      callback = arguments[arguments.length - 1];
      opts = {};
    }
    bot = new Seat(opts);
    if (bot.debug) {
      console.log("Creating seat for - " + id);
    }
    return typeof callback === "function" ? callback(null, bot) : void 0;
  };

}).call(this);
